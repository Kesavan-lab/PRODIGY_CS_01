def encrypt_caesar(plaintext, shift):
    encrypted_text = ""
    
    for char in plaintext:
        if char.isalpha():
            # Determine if character is uppercase or lowercase
            ascii_offset = 65 if char.isupper() else 97
            
            # Shift character and wrap around the alphabet
            encrypted_char = chr((ord(char) - ascii_offset + shift) % 26 + ascii_offset)
            encrypted_text += encrypted_char
        else:
            # Non-alphabetic characters are not changed
            encrypted_text += char

    return encrypted_text

def decrypt_caesar(ciphertext, shift):
    decrypted_text = ""
    
    for char in ciphertext:
        if char.isalpha():
            # Determine if character is uppercase or lowercase
            ascii_offset = 65 if char.isupper() else 97
            
            # Shift character back and wrap around the alphabet
            decrypted_char = chr((ord(char) - ascii_offset - shift) % 26 + ascii_offset)
            decrypted_text += decrypted_char
        else:
            # Non-alphabetic characters are not changed
            decrypted_text += char

    return decrypted_text

# Example usage
def caesar_cipher():
    choice = input("Would you like to (e)ncrypt or (d)ecrypt? ").lower()
    message = input("Enter your message: ")
    shift = int(input("Enter the shift value: "))
    
    if choice == 'e':
        encrypted_message = encrypt_caesar(message, shift)
        print(f"Encrypted message: {encrypted_message}")
    elif choice == 'd':
        decrypted_message = decrypt_caesar(message, shift)
        print(f"Decrypted message: {decrypted_message}")
    else:
        print("Invalid choice. Please select 'e' for encryption or 'd' for decryption.")

# Run the Caesar Cipher program
caesar_cipher()
